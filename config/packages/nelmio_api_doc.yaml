nelmio_api_doc:
    documentation:
        info:
            title: Home Budget
            description: Home Budget App
            version: 1.0.0
        servers:
            - url: http://localhost:8000/api
        tags:
            - name: user
              description: Operations about user
            - name: category
              description: Operations about category
            - name: earnings
              description: Operations about earnings
            - name: expense
              description: Operations about expenses
            - name: aggregation
              description: Data aggregation requests
        components:
          securitySchemes:
            bearerAuth:
              type: http
              scheme: bearer
              bearerFormat: JWT
        paths:
          /register:
            post:
              tags:
                - user
              summary: Register a new user
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        email:
                          type: string
                          format: email
                          example: user@example.com
                        password:
                          type: string
                          example: password123
                      required:
                        - email
                        - password
              responses:
                '201':
                  description: Registered Successfully.
                '400':
                  description: Could not register new user.
          /login:
            post:
              tags:
                - user
              summary: Login with an existing user
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        username:
                          type: string
                          format: email
                          example: user@example.com
                        password:
                          type: string
                          example: password123
                      required:
                        - username
                        - password
              responses:
                '200':
                  description: User logged in successfully
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          token:
                            type: string
                            example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiO..."
                '401':
                  description: Invalid email or password
          /add/category:
            post:
              tags:
                - category
              summary: Add a new category
              security:
                - bearerAuth: [ ]
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "Category Name"
                      required:
                        - name
              responses:
                '201':
                  description: Category added successfully
                '401':
                  description: Unauthorized access. Invalid JWT Token
                '400':
                  description: Error when trying to save category.
          /delete/category:
            delete:
              tags:
                - category
              summary: Delete a category by id
              security:
                - bearerAuth: [ ]
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                      required:
                        - id
              responses:
                '200':
                  description: Category deleted successfully
                '400':
                  description: Error when trying to delete category. Bad request data.
                '401':
                  description: Unauthorized access. Invalid JWT Token.
          /update/category:
            put:
              tags:
                - category
              summary: Update a category by id
              security:
                - bearerAuth: [ ]
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: "Updated Category Name"
                      required:
                        - id
                        - name
              responses:
                '200':
                  description: Category updated successfully
                '400':
                  description: Error when trying to update category. Bad request data
                '401':
                  description: Unauthorized access. Invalid JWT Token.
          /categories:
            get:
              tags:
                - category
              summary: Get all categories
              security:
                - bearerAuth: [ ]
              responses:
                '200':
                  description: List of all categories
                  content:
                    application/json:
                      schema:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: "Category Name"
          /add/earnings:
            post:
              tags:
                - earnings
              summary: Add new earnings
              security:
                - bearerAuth: [ ]
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        amount:
                          type: number
                          format: float
                          example: 500.52
                        description:
                          type: string
                          example: "Sold books"

                      required:
                        - amount
                        - description
              responses:
                '200':
                  description: Added new earnings successfully
                '400':
                  description: Bad request data. Error when trying to add earnings.
                '401':
                  description: Unauthorized access. Invalid JWT Token.
          /delete/earnings:
            delete:
              tags:
                - earnings
              summary: Delete earnings by id
              security:
                - bearerAuth: [ ]
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                      required:
                        - id
              responses:
                '200':
                  description: Earnings deleted successfully
                '400':
                  description: Error when trying to delete earnings. Bad request data.
                '401':
                  description: Unauthorized access. Invalid JWT Token.
          /update/earnings:
            put:
              tags:
                - earnings
              summary: Update earnings by id
              security:
                - bearerAuth: [ ]
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        amount:
                          type: number
                          format: float
                          example: 500.02
                        description:
                          type: string
                          example: "salary"
                      required:
                        - id
                        - amount
              responses:
                '200':
                  description: Earnings updated successfully
                '400':
                  description: Bad request data
                '401':
                  description: Unauthorized access
          /earnings:
            get:
              tags:
                - earnings
              summary: Get all earnings
              security:
                - bearerAuth: [ ]
              responses:
                '200':
                  description: OK
                  content:
                    application/json:
                      schema:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            amount:
                              type: number
                              format: float
                              example: 500.03
                            description:
                              type: string
                              example: Salary
                            createdAt:
                              type: string
                              format: date-time
                              example: 2023-03-17T15:36:04+01:00
                '401':
                  description: Unauthorized access
          /add/expense:
            post:
              tags:
                - expense
              summary: Add a new expense
              security:
                - bearerAuth: [ ]
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        category_id:
                          type: number
                          example: 1
                        description:
                          type: string
                          example: bills
                        amount:
                          type: number
                          format: float
                          example: 232.32
                      required:
                        - category_id
                        - description
                        - amount
              responses:
                '200':
                  description: Expense added successfully
                '400':
                  description: Bad request
                '401':
                  description: Unauthorized access
          /delete/expense:
            delete:
              tags:
                - expense
              summary: Delete expense by id
              security:
                - bearerAuth: [ ]
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                      required:
                        - id
              responses:
                '200':
                  description: Expense deleted successfully
                '400':
                  description: Error when trying to delete expense. Bad request data.
                '401':
                  description: Unauthorized access. Invalid JWT Token.
          /update/expense:
            put:
              tags:
                - expense
              summary: Update expense by id
              security:
                - bearerAuth: [ ]
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        amount:
                          type: number
                          format: float
                          example: 500.02
                        description:
                          type: string
                          example: "bills"
                        category_id:
                          type: integer
                          example: 5
                      required:
                        - id
                        - amount
              responses:
                '200':
                  description: Expense updated successfully
                '400':
                  description: Bad request data
                '401':
                  description: Unauthorized access
          /expenses:
            get:
              tags:
                - expense
              summary: Get all expenses
              parameters:
                - name: category
                  in: query
                  description: Category id
                  schema:
                    type: integer
                    example: 1
                - name: min
                  in: query
                  description: Minimum amount
                  schema:
                    type: number
                    example: 200.00
                - name: max
                  in: query
                  description: Maximum amount
                  schema:
                    type: number
                    example: 500.00
                - name: date
                  in: query
                  description: Date to filter by
                  schema:
                    type: string
                    format: date
                    example: "2023-03-17"
              security:
                - bearerAuth: [ ]
              responses:
                '200':
                  description: OK
                  content:
                    application/json:
                      schema:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            description:
                              type: string
                              example: bills
                            amount:
                              type: number
                              format: float
                              example: 300.05
                            createdAt:
                              type: string
                              format: date-time
                              example: "2023-03-19T12:09:01"
                            category:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                name:
                                  type: string
                                  example: Category 1
                '401':
                  description: Unauthorized access
          /summary:
            get:
              tags:
                - aggregation
              summary: Get total expenses and earnings for a time period
              security:
                - bearerAuth: [ ]
              parameters:
                - in: query
                  name: from
                  schema:
                    type: string
                    format: string
                  description: Start date
                  example: "2023-03-17"
                - in: query
                  name: to
                  schema:
                    type: string
                    format: string
                  description: End date
                  example: "2023-03-19"
              responses:
                '200':
                  description: OK
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          total_earnings:
                            type: number
                            format: float
                            example: 203.34
                          total_expenses:
                            type: number
                            format: float
                            example: 503.55
                '401':
                  description: Unauthorized access
    areas: # to filter documented areas
      disable_default_routes: true
      path_patterns:
        - ^/api(?!/doc$) # Accepts routes under /api except /api/doc
